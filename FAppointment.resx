<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAASgSURBVHhe7ZtLyBZVGMc/y252ERddNcjsIkg3yLJsI20M
        CVy0MRVBKLtgizYaVHhJNNq0KyMINV2ULYIgInAhEQkmuhG8dKOEpNQu3krN/j/xjw8yZ775Pt8zzgzv
        H374fo/PzDnPec87c+Y5zwz0UHeIl8/+m0t3itxtDFt7xWmx+8xfefSdoI1dZ/5qmOiYyaERwuf/D0PT
        1B+AQA71B0D0B+As/QHAcDE1UtwmJovpYraIA7AowQqxahDwKTp2sYgDMEc8IR4S9IU+ZdNoMVe8L7aK
        4yIG3ASOCfpGHxmc68QF61rxlvhbFDXaZP4Sb4prxLA0UXjldT6nxD6xQ2wSH4nV4m0Rp/NKUTSdB4Pj
        4nki74p14hPxpfhG0JeifgIr1LvFkHSD+EnEE+0Ur4op4mrRNF0lHhP0keV47DuxXC8q6zPhgw+LeeIS
        0RbR1/niiHAcn4pK4hv2QSfENNFWPS5OCsfzoBhUa4UPeA9Dy8VdwfF8gKFMTJ39wgfcK9qu+4XjIbbS
        n/IDws4/YOiI4gX9HgwpsYCwI1f9oltUGyEWxzVLJMUy1I5dZblIKl4Au0rphfBzYcf1omgl1kY2CMfF
        Giepb4UdH8bQET0qHNcWDCntEXYsvVq2TPFWyAUxqV+EHW/H0BHdJRzXjxhSOijseBOGjmiscFwshpLi
        wceOPUkoNERjhOP6E0NKR4UdL8fQEfGo7LhI7iQVU11Zc2w160rhuJjlSdU5AGxwkq2B3JudzGbHxSxP
        6h9hx0sxZNQrwm3xOacuE26LLzmpmDzInQFaItwWn3OK2ey2+JKTItlpRzYicqrOAWA2uy2yXEmx4WDH
        3KpzAJjNbotZnpSdILfqHADktkq31ewEuXWxBqA0tkpOPVJ/AITb6g8AhsyqFFslpx4pDsBSDJlVKbZ4
        G8y9DogrwQOClHwuxeIK1jpJ1bkSnCB+F24v5yDEhVDpOqDOAUD3id+E2zwkKu3fDVFxKfwvhpRYJtox
        98OQVccgVH4Yio/DHFSXSFrGnwOf+Yn0SlcIn5tSmqT4TzvWnRE6fxAoiu6VYkKkNB8QU2KjMNQsBoHq
        DujlDKCixXGVZoRIGNpxSCUlDdeNwnFxjUnqV2HH8Rg6IlJujou9j6S+F3bsQnGEFXeGSt9n2C7sOBVD
        R0T1mONi/zOpL4QdKYHtiiipdVzsgCcV6wOewdARLRCOaw2GlF4XdqTMtCui3NdxvYYhpaeEHSmB7Yo2
        C8c1E0NKtwo/ErMoGnahcYPEJq+X+MR2iyjVNuHRehFDy/WScDyldwArHsBT2jjRVjGj4/PFQjGo2Er+
        WfggSubbWC9EzXMs9ycmHooqiYVD3CgFLooviEmiiVvnPL7TN/pIX2PfSYIQ05A0Q/wh4okMiRO2tb8S
        vLTACxPcX98RRWVqhkRoUSVnZJkoOtbwYgbrlY8FbX8t+KZjMifCA96TYliiUIq3M1InbzIkPz8UPSn2
        4kL4rNgoKKWLucOmwC2OWcnMeF7cLLKJFBOvsj8imF4UIDNA3EGKprUhFV40rYt4QxSd4zlBW08L2ua3
        zbdc+QJ3TgMD/wM0IEg+ZLQ/kAAAAABJRU5ErkJggg==
</value>
  </data>
</root>